{"componentChunkName":"component---src-pages-index-jsx","path":"/","webpackCompilationHash":"00bb2f67398babb16aa1","result":{"data":{"site":{"siteMetadata":{"title":"Journal on Software","subtitle":"","copyright":"© All rights reserved.","menu":[{"label":"Articles","path":"/"},{"label":"About me","path":"/about/"}],"author":{"name":"Meric Taze","email":"info@merictaze.com","linkedin":"merictaze","twitter":"#","github":"merictaze","rss":"rss.xml","vk":"#"}}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/web-security-unknowns-same-origin-policy/","categorySlug":"/categories/web/"},"frontmatter":{"title":"Web security unknowns: Same-origin Policy","date":"2019-07-16","category":"Web","description":"Attacks like CSRF or XSS are still not clear to many of us. It is not because they are super hard to understand, but it requires some basic understanding of concepts like SOP, CORS, CSP, HTTPS. Let's start with what's Same-origin Policy"}}},{"node":{"fields":{"slug":"/posts/indexing-dynamodb-items-to-elasticsearch-using-aws-lambda/","categorySlug":"/categories/aws/"},"frontmatter":{"title":"Indexing DynamoDB Items to ElasticSearch using AWS Lambda","date":"2018-07-04","category":"AWS","description":"DynamoDB is Amazon’s NoSQL database which offers single-digit milliseconds latency. It is great for variety of use cases, but when you need to run complex search queries on your dataset, you quickly realise it is not designed for it."}}},{"node":{"fields":{"slug":"/posts/going-serverless-offline/","categorySlug":"/categories/aws/"},"frontmatter":{"title":"Going Serverless Offline","date":"2018-07-03","category":"AWS","description":"In this post, we are going to setup an environment with API Gateway, Lambda and DynamoDB using serverless framework which can be deployed to AWS directly or run fully local."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}