{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/creating-a-unified-formik-input-field","webpackCompilationHash":"6e3c77a790c3535cee2a","result":{"errors":[{"message":"404 - \"{\\\"error\\\":\\\"Not Found\\\"}\"","locations":[{"line":19,"column":5}],"path":["markdownRemark","html"]}],"data":{"site":{"siteMetadata":{"title":"merictaze.com - Full Stack Software Development","subtitle":"","copyright":"Â© All rights reserved.","author":{"name":"Meric Taze","twitter":"#"},"disqusShortname":"","url":"https://merictaze.com"}},"markdownRemark":{"id":"49aaa5f3-649d-5ea0-9d2a-af82c2f75ee1","html":null,"fields":{"tagSlugs":["/tags/react/","/tags/formik/","/tags/form/","/tags/checkbox/"],"slug":"/posts/creating-a-unified-formik-input-field"},"frontmatter":{"title":"Creating a unified Formik input field to support all input types seamlessly","tags":["react","formik","form","checkbox"],"date":"2019-09-09","description":"We are going to create a single component that supports text, textarea, select, radio, and checkbox. It will absorb all implementation differences for different inputs and will allow us using a unified component in our Formik forms.","canonical":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/creating-a-unified-formik-input-field"}}}