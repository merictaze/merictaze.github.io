{"version":3,"sources":["webpack:///./src/components/Author/index.jsx","webpack:///./src/components/PostTemplateDetails/index.jsx","webpack:///./src/templates/post-template.jsx"],"names":["props","style","display","src","profilePic","className","marginRight","width","height","alt","author","name","moment","publishDate","format","PostTemplateDetails","render","this","data","site","siteMetadata","subtitle","post","markdownRemark","tags","fields","tagSlugs","homeBlock","to","tagsBlock","map","tag","i","key","frontmatter","title","Author","date","dangerouslySetInnerHTML","__html","tableOfContents","html","slug","comments","allCommentsYaml","nodes","React","Component","CommentComponent","handleChange","event","target","setState","prevState","form","value","handleSubmit","preventDefault","URLSearchParams","append","state","message","submitted","fetch","method","headers","body","then","response","json","success","catch","error","onSubmit","marginBottom","type","onChange","rows","disabled","comment","marginTop","id","flex","alignSelf","data-letters","charAt","toUpperCase","length","PostTemplate","postTitle","postDescription","description","canonical","Layout","content","rel","href"],"mappings":"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","file":"component---src-templates-post-template-jsx-e508ae700446158f54ea.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport profilePic from '../../pages/photo.jpg';\n\nexport default (props) => (\n  <div style={{display: 'flex', }}>\n    <img\n      src={profilePic}\n      className=\"sidebar__author-photo\"\n      style={{marginRight: '10px'}}\n      width=\"50\"\n      height=\"50\"\n      alt={props.author.name}\n    />\n    <div>\n      <div>\n        {props.author.name}\n      </div>\n      <em>\n        <small>\n          {moment(props.publishDate).format('D MMM YYYY')}\n        </small>\n      </em>\n    </div>\n  </div>\n);","import React from 'react'\nimport moment from 'moment';\nimport { Link } from 'gatsby'\nimport Author from '../Author'\nimport './style.scss'\n\nclass PostTemplateDetails extends React.Component {\n  render() {\n    const { subtitle, author } = this.props.data.site.siteMetadata\n    const post = this.props.data.markdownRemark\n    const tags = post.fields.tagSlugs\n\n    const homeBlock = (\n      <div>\n        <Link className=\"post-single__home-button\" to=\"/\">\n          All Articles\n        </Link>\n      </div>\n    )\n\n    const tagsBlock = (\n      <div className=\"post-single__tags\">\n        <ul className=\"post-single__tags-list\">\n          {tags &&\n            tags.map((tag, i) => (\n              <li className=\"post-single__tags-list-item\" key={tag}>\n                <Link to={tag} className=\"post-single__tags-list-item-link\">\n                  {post.frontmatter.tags[i]}\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </div>\n    )\n\n    return (\n      <div>\n        {homeBlock}\n        <div className=\"post-single\">\n          <div className=\"post-single__inner\">\n            <h1 className=\"post-single__title\">{post.frontmatter.title}</h1>\n\n            <div className=\"post-single__author\">\n              <Author author={author} publishDate={post.frontmatter.date} />\n            </div>\n\n            <div className=\"post-single__body\">\n              <h2>Table Of Contents</h2>\n              <div\n                className=\"post-toc\"\n                /* eslint-disable-next-line react/no-danger */\n                dangerouslySetInnerHTML={{ __html: post.tableOfContents }}\n              />\n            </div>\n            <hr/>\n            <div\n              className=\"post-single__body\"\n              /* eslint-disable-next-line react/no-danger */\n              dangerouslySetInnerHTML={{ __html: post.html }}\n            />\n            {/*<div className=\"post-single__date\">*/}\n              {/*<em>*/}\n                {/*Published {moment(post.frontmatter.date).format('D MMM YYYY')}*/}\n              {/*</em>*/}\n            {/*</div>*/}\n          </div>\n          <div className=\"post-single__footer\">\n            {tagsBlock}\n            <hr />\n            <p className=\"post-single__footer-text\">\n              {/*<strong>{author.name}</strong>*/}\n              {/*&nbsp;&mdash;*/}\n              {/*{subtitle}*/}\n              {/*<a*/}\n                {/*href={`https://twitter.com/${author.twitter}`}*/}\n                {/*target=\"_blank\"*/}\n                {/*rel=\"noopener noreferrer\"*/}\n              {/*>*/}\n                {/*<br /> <strong>{author.name}</strong> on Twitter*/}\n              {/*</a>*/}\n            </p>\n            <CommentComponent slug={post.fields.slug} comments={this.props.data.allCommentsYaml.nodes} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass CommentComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {\n        name: '',\n        message: '',\n        slug: this.props.slug,\n      },\n      submitted: 0,\n    };\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    this.setState(prevState => ({\n      form: {\n        ...prevState.form,\n        [target.name]: target.value,\n      },\n    }))\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const data = new URLSearchParams();\n    data.append('fields[name]', this.state.form.name);\n    data.append('fields[message]', this.state.form.message);\n    data.append('fields[slug]', this.state.form.slug);\n    data.append('options[slug]', this.state.form.slug);\n\n    this.setState({submitted: 2});\n    fetch('https://mrc-blog-comment.herokuapp.com/v2/entry/merictaze/merictaze.github.io/source/comments', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: data,\n    })\n    .then((response) => response.json())\n    .then((response) => {this.setState({submitted: response.success ? 1 : -1})})\n    .catch((error) => {this.setState({submitted: -1})});\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Comments</h2>\n\n        {this.state.submitted === 1 &&\n          <div className=\"alert-success\">Comment has been submitted, it will show up here after the review.</div>}\n\n        {this.state.submitted === -1 &&\n          <div className=\"alert-failure\">Failed to submit the comment, please try again later</div>}\n\n        <form onSubmit={this.handleSubmit} style={{marginBottom: 50}}>\n          <label>\n            Name or Email\n            <input name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\n          </label>\n\n          <label>\n            Message\n            <textarea rows={4} name=\"message\" value={this.state.message} onChange={this.handleChange}></textarea>\n          </label>\n\n          <div>\n            <input type=\"submit\" value=\"Submit\" disabled={this.state.submitted === 2}/>\n          </div>\n        </form>\n\n\n        {this.props.comments && this.props.comments.map(comment => (\n          <div style={{marginTop: 20}} key={comment.id}>\n            <div style={{display: 'flex', flex: 1}}>\n              <div style={{alignSelf: 'center'}} data-letters={comment.name.charAt(0).toUpperCase()}></div>\n              <div>\n                <div>{comment.name}</div>\n                <div><em><small>{moment(comment.date).format('D MMM YYYY')}</small></em></div>\n              </div>\n            </div>\n            <p style={{marginRight: '3.5em'}}>\n              {comment.message}\n            </p>\n          </div>\n        ))}\n\n        {(!this.props.comments || this.props.comments.length === 0) && <p>No comments yet.</p>}\n      </div>\n    );\n  }\n}\n\nexport default PostTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport PostTemplateDetails from '../components/PostTemplateDetails'\n\nclass PostTemplate extends React.Component {\n  render() {\n    const { title, subtitle } = this.props.data.site.siteMetadata\n    const post = this.props.data.markdownRemark\n    const { title: postTitle, description: postDescription, canonical: canonical } = post.frontmatter\n    const description = postDescription !== null ? postDescription : subtitle\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${postTitle} - ${title}`}</title>\n            <meta name=\"description\" content={description} />\n            ${canonical && <link rel=\"canonical\" href={canonical} />}\n          </Helmet>\n          <PostTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default PostTemplate\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        author {\n          name\n          twitter\n        }\n        disqusShortname\n        url\n      }\n    }\n    allCommentsYaml(filter: { slug: { eq: $slug } }) {\n      nodes {\n        id\n        slug\n        name\n        date\n        message\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      headings {\n          value\n          depth\n      }\n      tableOfContents(\n        maxDepth: 2\n      )\n      fields {\n        tagSlugs\n        slug\n      }\n      frontmatter {\n        title\n        tags\n        date\n        description\n        canonical\n      }\n    }\n  }\n`\n"],"sourceRoot":""}